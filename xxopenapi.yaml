openapi: 3.0.0
info:
  title: WAAS API
  version: 0.9.12
  description: 
    $ref: description.md
tags:
  - name: Custody->Exchange
    description: Custody calls Exchange
  - name: Exchange->Custody
    description: Exchange calls Custody
  - name: Exchange->E-Custody
    description: Exchange's business system calls the mpc custody service (which is run by the exchange) internally
  - name: E-Custody->Exchange
    description: The mpc custody service (which is run by the exchange) calls Exchange's business system internally
paths:
  /exchange/v1/connect:
    post:
      tags:
        - Custody->Exchange
      description: Connect CVA account with MEA account
      summary: /exchange/v1/connect
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                exchangeAccountId:
                  type: string
                  description: Unique identifier for the MEA account to be bound, API KEY
              required:
                - collateralId
                - exchangeAccountId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    enum: [false,true]
                    description: Binding status, False/True (failed/success)
                  rejectReason:
                    type: string
                    nullable: true
                    description: Reason for rejection if binding is denied by the exchange; can be null if the validation passes
                required:
                  - status

  /exchange/v1/address:
    post:
      tags:
        - Custody->Exchange
      description: Notify exchange to add new addresses for the CVA account
      summary: /exchange/v1/address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                  description: Identifier for this binding request
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                assets:
                  type: array
                  items:
                    type: object
                    properties:
                      currency:
                        $ref: '#/components/schemas/Currency'
                      network:
                        $ref: '#/components/schemas/Network'
                      assetId:
                        $ref: '#/components/schemas/AssetId'
                      address:
                        type: string
                        description: Address allocated by Sinohope for the user's CVA account
                      settlementNetwork:
                        $ref: '#/components/schemas/Network'
                        description: the settlement network of this currency.
                      tag:
                        type: string
                        nullable: true
                        description: Tag allocated by Sinohope for the user's CVA account
                    required:
                      - currency
                      - network
                      - assetId
                      - address
                      - settlementNetwork
              required:
                - requestId
                - collateralId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  received:
                    type: number
                    example: 0
                    description: Address reception status,enum, 0 asynchronously processing, 1 Failed, 2 Success.
                required:
                  - received

  /exchange/v1/address/status:
    get:
      tags:
        - Custody->Exchange
      description: Check the status of the address addition request
      summary: /exchange/v1/address/status
      parameters:
        - name: requestId
          in: query
          required: true
          description: Identifier for this binding request
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Address addition status, False/True (failed/success)
                required:
                  - status

  /exchange/v1/mpc/pubkey:
    post:
      tags:
        - Custody->Exchange
      description: Notify exchange to add relationship between CVA account and the root mpc public key (If the Exchange keeps one mpc key share)
      summary: /exchange/v1/mpc/pubkey
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                cmrkPK:
                  type: object
                  description: The public keys of the CVA's root mpc key
                  properties:
                    ecdsaPK:
                      type: string
                      description: The "ecdsa-secp256k1" compressed public key (33 bytes, formatted in hexadecimal).
                      example: "03598ecfd82edccf9d1ad0da244b27b266640c21891fa1c293909b12a03ca16ec5"
                    eddsaPK:
                      type: string
                      description: the "eddsa-ed25519" compressed public key(32 bytes, formatted in hexadecimal).
                      example: "48e7b1ec57a57c14acdb09b50b250c59b74139d23968436861696e4b65795820"
              required:
                - collateralId
                - cmrkPK
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of setting the related public key, False/True (failed/success)
                required:
                  - status

  /exchange/v1/settlement/network:
    post:
      tags:
        - Custody->Exchange
      description: Set the default settlement network for CVA addresses (multi-chain scenario)
      summary: /exchange/v1/settlement/network
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                currency:
                  $ref: '#/components/schemas/Currency'
                settlementNetwork:
                  type: string
                  description: Default settlement network for the CVA account, specified by the user on Sinohope side (previously confirmed with the exchange)
                  example: "ETH"
              required:
                - collateralId
                - currency
                - settlementNetwork
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of setting the preferred network, False/True (failed/success)
                required:
                  - status

  /exchange/v1/deposit:
    post:
      tags:
        - Custody->Exchange
      description: Notify the exchange that there's an user deposit.
      summary: /exchange/v1/deposit
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                currency:
                  $ref: '#/components/schemas/Currency'
                network:
                  $ref: '#/components/schemas/Network'
                assetId:
                  $ref: '#/components/schemas/AssetId'
                txHash:
                  type: string
                  description: the deposit transaction hash
                  example: "0xe925a7254d5cb38aad20fb36d8477d62a445cdfe1391763bace676fb571b99da"
                amount:
                  type: string
                  description: the deposit amount(origin value, not converted acording to the decimals)
                  example: "36870000"
              required:
                - collateralId
                - currency
                - network
                - assetId
                - txHash
                - amount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  accepted:
                    type: boolean
                    example: true
                    description: Whether the deposit is accepted( True - accepted, False - denied).
                required:
                  - accepted

  /exchange/v1/settlement/list:
    post:
      tags:
        - Custody->Exchange
      description: Request settlement details from the exchange for user-initiated settlements
      summary: /exchange/v1/settlement/list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                settlementId:
                  type: string
                  description: Unique identifier for a settlement batch
                assetId:
                  type: string
                  nullable: true
                  description: For user-initiated single-currency settlements
              required:
                - collateralId
                - settlementId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  settlementId_ex:
                    type: string
                    description: Exchange-side unique identifier for the settlement batch
                  to_exchange:
                    type: array
                    items:
                      type: object
                      properties:
                        assetId:
                          type: string
                          description: Sinohope's asset identifier (for multi-chain scenarios, the exchange needs to split the details based on the CVA account balance)
                          example: "USDT_ETH"
                        amount:
                          type: string
                          description: Settlement amount
                          example: "36870000"
                        toAddress:
                          type: string
                          description: Exchange's receiving address
                        toTag:
                          type: string
                          nullable: true
                          description: Exchange's receiving address tag
                      required:
                        - assetId
                        - amount
                        - toAddress
                  to_collateral:
                    type: array
                    items:
                      type: object
                      properties:
                        assetId:
                          type: string
                          description: Sinohope's asset identifier (for multi-chain scenarios, assets should be merged for settlement based on the user's preferred network)
                          example: "ETH_ETH"
                        amount:
                          type: string
                          description: Settlement amount
                          example: "1000000000000000000"
                        toAddress:
                          type: string
                          description: CVA address
                        toTag:
                          type: string
                          nullable: true
                          description: CVA address tag
                      required:
                        - assetId
                        - amount
                        - toAddress

  /exchange/v1/settlement/confirm:
    post:
      tags:
        - Custody->Exchange
      description: Notify the exchange to initiate settlement to CVA account after user confirmation
      summary: /exchange/v1/settlement/confirm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                settlementId:
                  type: string
                  description: Unique identifier for a settlement batch
                approved:
                  type: boolean
                  description: The user has approved the settlement details (True), or denied/disagreed the settlement details (False).
                  example: true
                assetId:
                  type: string
                  nullable: true
                  description: For user-initiated partial confirmation scenarios
              required:
                - collateralId
                - settlementId
                - approved
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Settlement initiation status, False/True (failed/success)
                required:
                  - status

  /exchange/v1/settlement/status:
    get:
      tags:
        - Custody->Exchange
      description: Query the settlement progress from the exchange to CVA
      summary: /exchange/v1/settlement/status
      parameters:
        - name: settlementId
          in: query
          required: true
          schema:
            type: string
          description: Unique identifier for a settlement batch
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    description: Asset list transferred from the exchange to CVA
                    items:
                      $ref: '#/components/schemas/assetTransStatusItem'

  /exchange/v1/settlement/finish:
    post:
      tags:
        - Custody->Exchange
      description: Notify the exchange after Sinohope settlement is completed
      summary: /exchange/v1/settlement/finish
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementId:
                  type: string
                  description: Unique identifier for a settlement batch
                data:
                  type: array
                  description: Asset list transferred from CVA account to the exchange
                  items:
                    $ref: '#/components/schemas/assetTransStatusItem'
              required:
                - settlementId
                - data
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the settlement finish notification, False/True (failed/success)
                required:
                  - status

  /exchange/v1/transaction/status:
    post:
      tags:
        - Custody->Exchange
      description: Notify the status of a transaction
      summary: /exchange/v1/transaction/status
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: string
                  description: Unique identifier for the transaction
                status:
                  type: string
                  enum: ["PENDING", "SUCCESS", "NEED_RETRY", "DISCARD", "FAIL"]
                  example: "PENDING"
                  description: The status of the transaction
                message:
                  type: string
                  nullable: true
                  description: Additional message about the transaction
              required:
                - transactionId
                - status
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the notification request, False/True (failed/success)
                required:
                  - status

  /exchange/v1/withdrawable:
    post:
      tags:
        - Custody->Exchange
      description: Query the withdrawable amount of a asset from the specific CVA account
      summary: /exchange/v1/withdrawable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                assetId:
                  type: string
                  description: Sinohope-defined currency identifier
              required:
                - collateralId
                - assetId
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  amount:
                    type: string
                    example: "0"
                    description: Withdrawable amount ("-1" means the user can withdraw this asset fully freely, "0" means nothing can be withdrawed, other wise means the maximun amount that the user can withdraw).
                required:
                  - amount

  /exchange/v1/withdraw:
    post:
      tags:
        - Custody->Exchange
      description: Request authorization from the exchange after the user initiates a withdrawal from the CVA account
      summary: /exchange/v1/withdraw
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                txId:
                  type: string
                  description: Unique identifier for the withdrawal order defined by Sinohope (if the withdrawal fails, the same txId will be used to initiate the withdrawal request)
                assetId:
                  type: string
                  description: Sinohope-defined currency identifier
                  example: "ETH_ETH"
                amount:
                  type: string
                  description: Withdrawal amount of the user
                  example: "1000000000000000000"
                fromAddress:
                  type: string
                  description: Specific CVA address (multiple addresses may exist under the same network for a CVA account)
                fromTag:
                  type: string
                  nullable: true
                  description: Tag corresponding to the specific CVA address
                toAddress:
                  type: string
                  description: Withdrawal target address
                toTag:
                  type: string
                  nullable: true
                  description: Withdrawal target address tag
              required:
                - collateralId
                - txId
                - assetId
                - amount
                - fromAddress
                - toAddress
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the withdrawal request, False/True (failed/success)
                  rejectReason:
                    type: string
                    nullable: true
                    description: The reject reason if the status is False
                required:
                  - status

  /exchange/v1/mpc/join:
    post:
      tags:
        - Custody->Exchange
      description: Notify the exchange's mpc key share custody service to join an mpc business initiated by user
      summary: /exchange/v1/mpc/join
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                roomId:
                  $ref: '#/components/schemas/RoomId'
                partyId:
                  $ref: '#/components/schemas/PartyId'
                partyIds:
                  $ref: '#/components/schemas/PartyIds'
                mpcType:
                  type: string
                  enum: ["DKG", "Refresh", "Delete"]
                  example: "Refresh"
                  description: MPC business type, enumeration of "DKG", "Refresh", "Delete"
                userId:
                  type: string
                  description: A data needed for locating the mpc key share
                cryptography:
                  type: string
                  description: Either "ecdsa-secp256k1" or "eddsa-ed25519"
                timeToLive:
                  type: number
                  description: The total TTL of this mpc business
                targetUserId:
                  type: string
                  nullable: true
                  description: The result will be connected to this target user id (null if the mpcType is DKG)
                cmrkPK:
                  type: string
                  nullable: true
                  description: The public key to identifies an mpc key share (null if the mpcType is DKG, otherwise it's required)
                path:
                  type: string
                  nullable: true
                  description: The path to derive the target account.
                signatureX1:
                  type: string
                  nullable: true
                  description: The user's signature to the mpc parameter data, which is signed by the user's mpc key share.(null if the mpcType is DKG, otherwise it's required)
              required:
                - collateralId
                - roomId
                - partyId
                - partyIds
                - mpcType
                - userId
                - cryptography
                - timeToLive
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the request, False/True (failed/success)
                  failedReason:
                    type: string
                    nullable: true
                    description: The failed reason if the status is False
                required:
                  - status

  /collateral/v1/address/status:
    post:
      tags:
        - Exchange->Custody
      description: Notify Sinohope after the exchange asynchronously processes the added address request
      summary: /collateral/v1/address/status
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                  description: Identifier for the binding request
              required:
                - requestId
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the address request processing, False/True (failed/success)
                required:
                  - status

  /collateral/v1/settlement/address:
    post:
      tags:
        - Exchange->Custody
      description: Notify Sinohope of the exchange's settlement addresses for assets. It will need an initial post when the exchange join the WAAS, and make a update when some addresses need to be changed.
      summary: /collateral/v1/settlement/address
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                addresses:
                  type: array
                  description: the exchange's settlement addresses
                  items:
                    type: object
                    properties:
                      currency:
                        $ref: '#/components/schemas/Currency'
                      network:
                        $ref: '#/components/schemas/Network'
                      address:
                        type: string
                        description: the exchange's settlement address of the currency on the network.
                      tag:
                        type: string
                        nullable: true
                        description: Tag allocated by the exchange
                    required:
                      - currency
                      - network
                      - address
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the processing, False/True (failed/success)
                    example: true
                required:
                  - status


  /collateral/v1/settlement:
    post:
      tags:
        - Exchange->Custody
      description: Notify Sinohope of the settlement details list after the exchange initiates a settlement
      summary: /collateral/v1/settlement
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementId_ex:
                  type: string
                  description: Exchange-side settlement batch identifier
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                to_exchange:
                  type: array
                  items:
                    type: object
                    properties:
                      assetId:
                        type: string
                        description: Sinohope asset identifier (for multi-chain scenarios, the exchange needs to split the details based on the balance of the user's CVA address)
                      amount:
                        type: string
                        description: Settlement amount
                      toAddress:
                        type: string
                        description: Exchange receiving address
                      toTag:
                        type: string
                        nullable: true
                        description: Exchange receiving address tag
                to_collateral:
                  type: array
                  items:
                    type: object
                    properties:
                      assetId:
                        type: string
                        description: Sinohope asset identifier (for multi-chain scenarios, the exchange needs to merge the settlement assets based on the user's preferedNetwork field when binding the address)
                      amount:
                        type: string
                        description: Settlement amount
                      toAddress:
                        type: string
                        description: CVA address
                      toTag:
                        type: string
                        nullable: true
                        description: CVA address tag
              required:
                - settlementId_ex
                - collateralId
                - to_exchange
                - to_collateral
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  settlementId:
                    type: string
                    description: Unique identifier for a settlement batch
                required:
                  - settlementId

  /collateral/v1/settlement/finish:
    post:
      tags:
        - Exchange->Custody
      description: Notify the Sinohope after the exchange settlement (for those assets transferred from the exchange to the CVA) is completed
      summary: /collateral/v1/settlement/finish
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementId:
                  type: string
                  description: Unique identifier for a settlement batch
                data:
                  type: array
                  description: Asset list transferred from the exchange to the CVA account 
                  items:
                    $ref: '#/components/schemas/assetTransStatusItem'
              required:
                - settlementId
                - data
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the settlement finish notification, False/True (failed/success)
                    example: true
                required:
                  - status

  /collateral/v1/settlement/tx/build:
    post:
      tags:
        - Exchange->Custody
      description: Build an unsigned transaction acording the settlementId and assetId (the transfer amount will be filled by the user confirmed settlement details)
      summary: /collateral/v1/settlement/tx/build
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settlementId:
                  type: string
                  description: Unique identifier for a settlement batch
                assetId:
                  type: string
                  description: Sinohope-defined currency identifier
                replacedTxId:
                  type: string
                  nullable: true
                  description: If this field is not empty, it means that we need to build a new transaction (usually with a higher transaction fee) to replace the existing specified transaction.
              required:
                - settlementId
                - assetId
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the transaction build, False/True (failed/success)
                  tx:
                    type: object
                    description: Not null if the status is true
                    properties:
                      transactionId:
                        type: string
                        description: A unique identifier of this transaction( not a transaction hash)
                      network:
                        type: string
                        description: the network of this transaction
                      txType:
                        type: string
                        description: Transaction type. Different block chains have different logics, and there may be different transaction types/formats within a same block chain.
                      hashToBeSigned:
                        type: string
                        description: Unsigned transaction hash. Note that this is not the final transaction hash.
                      data:
                        type: object
                        description: Unsigned transaction detail data, which needs to determine the data fields based on network, and txType. If it's an UTXO transaction, then the data should be a map , which key is a `vinId` that identifies the TransactionInput and the value is the TransactionInput.
                        properties:
                          asset:
                            type: string
                            description: asset type in the transaction details
                          decimal:
                            type: number
                            description: asset decimal needed in the transaction details
                          currentTime:
                            type: number
                            description: unix timestamp in milliseconds
                          expireTime:
                            type: number
                            description: expire timestamp in milliseconds
                          expireBlockHeight:
                            type: number
                            description: expire block height
                          referBlockHeight:
                            type: number
                            description: expire block height
                          from:
                            type: string
                            description: from address
                          fromTag:
                            type: string
                            description: from tag
                          to:
                            type: string
                            description: to address
                          toTag:
                            type: string
                            description: to tag
                          amount:
                            type: string
                            description: the transfer amount
                          fee:
                            type: string
                            description: 
                          feeAsset:
                            type: string
                            description: 
                          feePrice:
                            type: string
                            description: 
                          feeStep:
                            type: string
                            description: 
                          chainId:
                            type: string
                            description: 
                          nonce:
                            type: number
                            description: 
                          vin:
                            type: object
                            description: the input of an UTXO transaction. It's a map which key is a `vinId` and vaule is an object.
                            additionalProperties:
                              type: object
                              properties:
                                hash:
                                  type: string
                                  description: the hash of the input transaction
                                voutIndex:
                                  type: number
                                  description: index of the input transaction
                                address:
                                  type: string
                                  description: 
                                amount:
                                  type: string
                                  description: 
                                asset:
                                  type: string
                                  description: 
                          vout:
                            type: array
                            description: the output of an UTXO transaction.
                            items:
                              type: object
                              properties:
                                asset:
                                  type: string
                                  description: 
                                address:
                                  type: string
                                  description: 
                                amount:
                                  type: string
                                  description: 
                          funName:
                            type: string
                            description: contract type, e.g. `erc20`, `erc721`, `erc1155`
                          params:
                            type: array
                            description: the parameters array of a contract call.
                            items:
                              type: object
                              properties:
                                value:
                                  type: string
                                  description: the parameter value
                                type:
                                  type: string
                                  description: the type of the parameter value
                    required:
                      - transactionId
                      - network
                      - txType
                      - hashToBeSigned
                      - data
                  fromAccount:
                    type: object
                    description: The information about the "from" account of the current transaction. Not null if the status is true.
                    properties:
                      userId:
                        type: string
                        description: A data needed for initiating an mpc signing
                      cmrkPK:
                        type: string
                        description: The public key to identifies an mpc key share
                      path:
                        type: string
                        description: The path to derive the "from" account.
                      cryptography:
                        type: string
                        description: Either "ecdsa-secp256k1" or "eddsa-ed25519", determined by the network
                        example: "ecdsa-secp256k1"
                    required:
                      - userId
                      - cmrkPK
                      - path
                      - cryptography
                  failedReason:
                    type: string
                    nullable: true
                    description: The failed reason if the status is False
                required:
                  - status

  /collateral/v1/settlement/tx/broadcast:
    post:
      tags:
        - Exchange->Custody
      description: Broadcast a signed transaction
      summary: /collateral/v1/settlement/tx/broadcast
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transactionId:
                  type: string
                  description: The unique identifier of the transaction defined by Sinohope
                signatures:
                  type: object
                  description: The final signature(s), it should be a map of sinature(s), for non-UTXO transaction, the key should be `sig`, for UTXO transaction, the key(s) should be a `vinId`, which should be correlated to the one in the response of `/collateral/v1/settlement/tx/build`. Each signature is concatenated directly by the r, s, v value, as "r||s||v", and formatted in hexadecimal. 
                  additionalProperties:
                    type: string
                  example: 
                    "sig": "3e7badaf020a3975a6783ec2f7f44efe4e79731227b1b85367ae1da8fe01c144533469a705baa61468b267f107e075844c7b520366e985b42ecfb6884f730d4300"
              required:
                - transactionId
                - signature
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the broadcast, False/True (failed/success)
                  failedReason:
                    type: string
                    nullable: true
                    description: The failed reason if the status is False
                required:
                  - status


  /collateral/v1/transactions:
    get:
      tags:
        - Exchange->Custody
      description: Query the status of a CVA transaction
      summary: /collateral/v1/transactions
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      parameters:
        - name: txId
          in: query
          required: true
          schema:
            type: string
          description: Unique identifier for the transaction
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Transaction status, enumeration to be determined
                  txHash:
                    type: string
                    nullable: true

  /collateral/v1/deposit/balance:
    post:
      tags:
        - Exchange->Custody
      description: Query the deposit balance details.
      summary: /collateral/v1/deposit/balance
      security:
        - ApiKeyAuth: []
          ApiNonce: []
          ApiSig: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collateralId:
                  $ref: '#/components/schemas/CollateralId'
                currency:
                  $ref: '#/components/schemas/Currency'
              required:
                - collateralId
                - currency
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  collateralId:
                    $ref: '#/components/schemas/CollateralId'
                  currency:
                    $ref: '#/components/schemas/Currency'
                  totalAmount:
                    type: string
                    description: total deposit balance of the currency
                    example: "36870000"
                  details:
                    type: array
                    items:
                      type: object
                      properties:
                        network:
                          $ref: '#/components/schemas/Network'
                        assetId:
                          $ref: '#/components/schemas/AssetId'
                        amount:
                          type: string
                          description: the deposit amount(origin value, not converted acording to the decimals)
                          example: "36870000"
                      required:
                        - network
                        - assetId
                        - amount
                required:
                  - collateralId
                  - currency
                  - totalAmount
                  - details

  /internal/v1/mpc/start:
    post:
      tags:
        - Exchange->E-Custody
      description: Notify the exchange's mpc key share custody service to initiates an mpc signing
      summary: /internal/v1/mpc/start
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                  description: The unique identifier of this request
                userId:
                  type: string
                  description: A data needed for initiating an mpc signing
                cmrkPK:
                  type: string
                  description: The public key to identifies an mpc key share
                path:
                  type: string
                  description: The path to derive the "from" account.
                mpcType:
                  type: string
                  description: MPC business type, currently it should be "sign"
                network:
                  type: string
                  description: Chain identifier
                cryptography:
                  type: string
                  description: Either "ecdsa-secp256k1" or "eddsa-ed25519", determined by the network
                  example: "ecdsa-secp256k1"
                message:
                  type: string
                  description: The message (unsigned transaction hash) to be signed
                timeToLive:
                  type: number
                  description: The total TTL of this mpc business
                transactionId:
                  type: string
                  description: Unique identifier for the related transaction
              required:
                - requestId
                - userId
                - cmrkPK
                - path
                - mpcType
                - network
                - cryptography
                - message
                - timeToLive
                - transactionId
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the request, False/True (failed/success)
                  failedReason:
                    type: string
                    nullable: true
                    description: The failed reason if the status is False
                required:
                  - status

  /internal/v1/mpc/signature/result:
    post:
      tags:
        - E-Custody->Exchange
      description: Notify the signature result to the exchange
      summary: /internal/v1/mpc/signature/result
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                requestId:
                  type: string
                  description: The request id that this result related to
                signature:
                  type: string
                  example: "3e7badaf020a3975a6783ec2f7f44efe4e79731227b1b85367ae1da8fe01c144533469a705baa61468b267f107e075844c7b520366e985b42ecfb6884f730d4300"
                  description: The final signature, it's concatenated directly by the r, s, v value, as "r||s||v", and formatted in hexadecimal.
              required:
                - requestId
                - signature
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the request, False/True (failed/success)
                  failedReason:
                    type: string
                    nullable: true
                    description: The failed reason if the status is False
                required:
                  - status

  /internal/v1/mpc/join:
    post:
      tags:
        - Exchange->E-Custody
      description: Notify the exchange's mpc key share custody service to join an mpc business initiated by user
      summary: /internal/v1/mpc/join
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roomId:
                  $ref: '#/components/schemas/RoomId'
                partyId:
                  $ref: '#/components/schemas/PartyId'
                partyIds:
                  $ref: '#/components/schemas/PartyIds'
                mpcType:
                  type: string
                  description: MPC business type, enumeration of "DKG", "Refresh", "Delete"
                userId:
                  type: string
                  description: A data needed for locating the mpc key share
                cryptography:
                  type: string
                  description: Either "ecdsa-secp256k1" or "eddsa-ed25519"
                timeToLive:
                  type: number
                  example: 1683196746
                  description: The total TTL of this mpc business
                targetUserId:
                  type: string
                  nullable: true
                  description: The result will be connected to this target user id (null if the mpcType is DKG)
                cmrkPK:
                  type: string
                  nullable: true
                  description: The public key to identifies an mpc key share (null if the mpcType is DKG, otherwise it's required)
                path:
                  type: string
                  nullable: true
                  description: The path to derive the target account.
                signatureX1:
                  type: string
                  nullable: true
                  description: The user's signature to the mpc parameter data, which is signed by the user's mpc key share.(null if the mpcType is DKG, otherwise it's required)
              required:
                - roomId
                - partyId
                - partyIds
                - mpcType
                - userId
                - cryptography
                - timeToLive
      responses:
        '200':
          description: Successful response
          content:
             application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                    description: Status of the request, False/True (failed/success)
                  failedReason:
                    type: string
                    nullable: true
                    description: The failed reason if the status is False
                required:
                  - status

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: BIZ-API-KEY
      description: This API key is given to you by Sinohope when onboarding your
        exchange.
    ApiNonce:
      type: apiKey
      in: header
      name: BIZ-API-NONCE
      description: A nonce value (timestamp) that is included in the data to be signed.
    ApiSig:
      type: apiKey
      in: header
      name: BIZ-API-SIGNATURE
      description: signature of the request information(nonce,path,body) using the secret_key which is provided by Sinohope when onboarding your exchange.
  schemas:
    assetTransStatusItem:
      type: object
      properties:
        assetId:
          type: string
          description: Asset identifier defined by Sinohope (different asset identifiers for the same currency on different chains, e.g., USDT_ETH, USDT_TRON)
          example: "USDT_ETH"
        status:
          type: string
          description: Settlement status, enumeration to be determined
          example: "COMPLETED"
        txHash:
          type: string
          nullable: true
          description: Transaction hash, if the transfer is completed
          example: "0x1aa0a50ca9db654a7dc2788548b43d121a59463621485be35515063d4a1382b6"
      required:
        - assetId
        - status
    CollateralId:
      type: string
      description: Unique identifier for the CVA account
      example: "411136872665588"
    Currency:
      type: string
      description: Currency identifier defined by the exchange
      example: "USDT"
    Network:
      type: string
      description: Chain identifier defined by the exchange
      example: "ETH"
    AssetId:
      type: string
      description: Asset identifier defined by Sinohope (different asset identifiers for the same currency on different chains, e.g., USDT_ETH, USDT_TRON)
      example: "USDT_ETH"
    RoomId:
      type: string
      description: Unique identifier for a mpc business
      example: "2dfb9742-e86f-42ce-b9a2-d3c73fd8a49e"
    PartyId:
      type: string
      description: The initiator of a mpc business, needed by e-custody.
    PartyIds:
      type: array
      description: The participants of a mpc business, needed by e-custody.
      items:
        type: string